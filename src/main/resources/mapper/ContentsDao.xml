<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tale.dao.ContentsDao">
    <resultMap id="BaseResultMap" type="com.tale.model.entity.Contents">
        <id column="cid" jdbcType="INTEGER" property="cid" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="slug" jdbcType="VARCHAR" property="slug" />
        <result column="created" jdbcType="INTEGER" property="created" />
        <result column="modified" jdbcType="INTEGER" property="modified" />
        <result column="author_id" jdbcType="INTEGER" property="authorId" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="tags" jdbcType="VARCHAR" property="tags" />
        <result column="categories" jdbcType="VARCHAR" property="categories" />
        <result column="hits" jdbcType="INTEGER" property="hits" />
        <result column="comments_num" jdbcType="INTEGER" property="commentsNum" />
        <result column="allow_comment" jdbcType="BIT" property="allowComment" />
        <result column="allow_ping" jdbcType="BIT" property="allowPing" />
        <result column="allow_feed" jdbcType="BIT" property="allowFeed" />
    </resultMap>
    <sql id="Base_Column_List">
        cid, title, slug, created, thumb_img, modified, content, author_id, type, status, tags, categories, hits,
        comments_num, allow_comment, allow_ping, allow_feed
    </sql>
    <select id="queryById" resultType="com.tale.model.entity.Contents" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from t_contents
        where cid=#{value}
    </select>

    <select id="queryObject" resultType="com.tale.model.entity.Contents" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from t_contents
        where cid=#{value}
    </select>

    <select id="queryByWhere" resultType="com.tale.model.entity.Contents" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from t_contents
        <include refid="query_by_where" />
    </select>

    <sql id="query_by_where">
        <where>
            <if test="cid!=null">
                and cid=#{cid}
            </if>
            <if test="keyword!=null">
                <![CDATA[ and title like #{keyword}]]>
            </if>
            <if test="type!=null">
                and type=#{type}
            </if>
            <if test="slug!=null and slug!=''">
                and slug=#{slug}
            </if>
            <if test="status!=null">
                and status=#{status}
            </if>
            <if test="categories!=null">
                and categories=#{categories}
            </if>
            <if test="start_time !=null">
                <![CDATA[ and created>=#{start_time}]]>
            </if>
            <if test="end_time !=null">
                <![CDATA[ and created<=#{end_time}]]>
            </if>
        </where>
    </sql>

    <select id="queryList" resultType="com.tale.model.entity.Contents">
        select <include refid="Base_Column_List"/> from t_contents
        <include refid="query_by_where" />
        <if test="order != null">
            order by ${order}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                LIMIT ${offset}, ${limit}
            </if>
            <if test="offset == null">
                LIMIT ${limit}
            </if>
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from t_contents
        <include refid="query_by_where" />
    </select>

    <insert id="save" parameterType="com.tale.model.entity.Contents" useGeneratedKeys="true" keyProperty="cid">
        insert into t_contents
        (
        `title`,
        `slug`,
        `fmt_type`,
        `thumb_img`,
        `created`,
        `modified`,
        `content`,
        `author_id`,
        `type`,
        `status`,
        `tags`,
        `categories`,
        `hits`,
        `comments_num`,
        `allow_comment`,
        `allow_ping`,
        `allow_feed`
        )
        values
        (
        #{title},
        #{slug},
        #{fmtType},
        #{thumbImg},
        #{created},
        #{modified},
        #{content},
        #{authorId},
        #{type},
        #{status},
        #{tags},
        #{categories},
        #{hits},
        #{commentsNum},
        #{allowComment},
        #{allowPing},
        #{allowFeed}
        )
    </insert>

    <update id="update" parameterType="com.tale.model.entity.Contents">
        update t_contents
        <set>
            <if test="title != null">`title` = #{title}, </if>
            <if test="slug != null">`slug` = #{slug}, </if>
            <if test="fmtType != null">`fmt_type` = #{fmtType}, </if>
            <if test="thumbImg != null">`thumb_img` = #{thumbImg}, </if>
            <if test="created != null">`created` = #{created}, </if>
            <if test="modified != null">`modified` = #{modified}, </if>
            <if test="content != null">`content` = #{content}, </if>
            <if test="authorId != null">`author_id` = #{authorId}, </if>
            <if test="type != null">`type` = #{type}, </if>
            <if test="status != null">`status` = #{status}, </if>
            <if test="tags != null">`tags` = #{tags}, </if>
            <if test="categories != null">`categories` = #{categories}, </if>
            <if test="hits != null">`hits` = #{hits}, </if>
            <if test="commentsNum != null">`comments_num` = #{commentsNum}, </if>
            <if test="allowComment != null">`allow_comment` = #{allowComment}, </if>
            <if test="allowPing != null">`allow_ping` = #{allowPing}, </if>
            <if test="allowFeed != null">`allow_feed` = #{allowFeed}</if>
        </set>
        where cid = #{cid}
    </update>

    <update id="updateByCondition" parameterType="com.tale.model.entity.Contents">
        update t_contents
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="slug != null">
                slug = #{slug,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=INTEGER},
            </if>
            <if test="modified != null">
                modified = #{modified,jdbcType=INTEGER},
            </if>
            <if test="authorId != null">
                author_id = #{authorId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                tags = #{tags,jdbcType=VARCHAR},
            </if>
            <if test="categories != null">
                categories = #{categories,jdbcType=VARCHAR},
            </if>
            <if test="hits != null">
                hits = #{hits,jdbcType=INTEGER},
            </if>
            <if test="commentsNum != null">
                comments_num = #{commentsNum,jdbcType=INTEGER},
            </if>
            <if test="allowComment != null">
                allow_comment = #{allowComment,jdbcType=BIT},
            </if>
            <if test="allowPing != null">
                allow_ping = #{allowPing,jdbcType=BIT},
            </if>
            <if test="allowFeed != null">
                allow_feed = #{allowFeed,jdbcType=BIT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <include refid="query_by_where" />
    </update>

    <delete id="delete">
        DELETE FROM t_contents WHERE cid = #{value}
    </delete>

    <resultMap id="archiveBoMap" type="com.tale.model.Bo.ArchiveBo">
        <id column="date" property="date"/>
        <result column="count" property="count"/>
    </resultMap>
    <select id="findReturnArchiveBo" resultMap="archiveBoMap">
        select FROM_UNIXTIME(created, '%Y年%m月') as date, count(*) as count from t_contents where type = 'post' and status = 'publish' group by date order by date desc
    </select>
    <select id="findByCatalog" parameterType="Integer" resultMap="BaseResultMap">
        select a.*
        from t_contents a left join t_relationships b on a.cid = b.cid
        where b.mid = #{value} and a.status = 'publish' and a.type = 'post'
        order by a.created desc
    </select>
</mapper>