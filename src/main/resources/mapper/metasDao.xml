<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tale.dao.MetasDao">
    <resultMap id="BaseResultMap" type="com.tale.model.entity.Metas">
        <id column="mid" jdbcType="INTEGER" property="mid" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="slug" jdbcType="VARCHAR" property="slug" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="sort" jdbcType="INTEGER" property="sort" />
        <result column="parent" jdbcType="INTEGER" property="parent" />
    </resultMap>
    <resultMap id="MetaDto" type="com.tale.dto.MetaDto" extends="BaseResultMap">
        <result column="count" property="count" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        mid, name, slug, type, description, sort, parent
    </sql>
    <select id="queryObject" resultType="com.tale.model.entity.Metas">
        select * from t_metas
        <include refid="query_by_where" />
    </select>

    <sql id="query_by_where">
        <where>
            <if test="mid!=null">
                and mid=#{mid}
            </if>
            <if test="type!=null">
                and type=#{type}
            </if>
            <if test="name!=null">
                <![CDATA[ and name="#{name}"]]>
            </if>
        </where>
    </sql>

    <select id="queryList" resultType="com.tale.model.entity.Metas">
        select * from t_metas
        <where>
            <if test="type != null and type.trim() != ''">
                and `type` = #{type}
            </if>
            <if test="name != null and name.trim() != ''">
                and `name` = #{name}
            </if>
        </where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by mid desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from t_metas
        <where>
            <if test="type != null and type.trim() != ''">
                and `type` = #{type}
            </if>
            <if test="name != null and name.trim() != ''">
                and `name` = #{name}
            </if>
        </where>
    </select>

    <insert id="save" parameterType="com.tale.model.entity.Metas" useGeneratedKeys="true" keyProperty="mid">
        insert into t_metas
        (
        `name`,
        `slug`,
        `type`,
        `description`,
        `sort`,
        `parent`
        )
        values
        (
        #{name},
        #{slug},
        #{type},
        #{description},
        #{sort},
        #{parent}
        )
    </insert>

    <update id="update" parameterType="com.tale.model.entity.Metas">
        update t_metas
        <set>
            <if test="name != null">`name` = #{name}, </if>
            <if test="slug != null">`slug` = #{slug}, </if>
            <if test="type != null">`type` = #{type}, </if>
            <if test="description != null">`description` = #{description}, </if>
            <if test="sort != null">`sort` = #{sort}, </if>
            <if test="parent != null">`parent` = #{parent}</if>
        </set>
        where mid = #{mid}
    </update>

    <delete id="delete">
        delete from t_metas where mid = #{value}
    </delete>

    <delete id="deleteBatch">
        delete from t_metas where mid in
        <foreach item="mid" collection="array" open="(" separator="," close=")">
            #{mid}
        </foreach>
    </delete>

    <select id="selectFromSql" resultMap="MetaDto" parameterType="Map">
        select a.*, count(b.cid) as count from t_metas a left join `t_relationships` b on a.mid = b.mid where a.type = #{type} group by a.mid order by #{order} limit #{limit}
    </select>

    <select id="selectDtoByNameAndType" resultMap="MetaDto">
        select a.*, count(b.cid) as count from t_metas a left join `t_relationships` b on a.mid = b.mid where a.type = #{type} and a.name = #{name} group by a.mid
    </select>

    <select id="countWithSql" parameterType="Integer" resultType="Integer">
        SELECT count(0)
        FROM t_contents a LEFT JOIN t_relationships b ON a.cid = b.cid
        WHERE b.mid = #{value} AND a.status = 'publish' AND a.type = 'post';
    </select>

</mapper>